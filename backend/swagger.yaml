tags:
- name: users
  description: users API

paths:
#Auth
  /auth/login:
    post:
      tags:
      - auth
      summary: Login
      parameters:
      - name: user
        in: header
        description: User Name
        required: true

      - name: password
        in: header
        description: User Password
        required: true
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

  /auth/logout:
    post:
      tags:
      - auth
      summary: Logout
      # bearer token
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

  /auth/last-sessions:
    get:
      tags:
      - auth
      summary: Last Session
      # bearer token
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

# [GET] users
  /users/all:
    get:
      parameters:
      - name: search
        in: query
        description: Búsqueda por nombre o apellido
        required: false
        type: string
      - name: page
        in: query
        description: Número de página
        required: false
        type: integer
      - name: items
        in: query
        description: Cantidad de registros por página
        required: false
        type: integer
      tags:
      - users
      summary: Find All Users
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  /users/create:
# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      security:
      - Bearer: []
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/by-id/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /users/update/{id}:
# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/update-users'
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PATCH] users/id/status
  /users/update-status/{id}/{status}:
    patch:
      tags:
      - users
      summary: Update User Status By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      - name: status
        in: path
        description: User Status
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /users/change-password:
    post:
      tags:
      - users
      summary: Change Password
      parameters:
      - name: body
        in: body
        description: Change Password Data
        required: true
        schema:
          $ref: '#/definitions/user-change-password'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        500:
          description: 'Server Error'

  /users/import-from-excel:
    post:
      tags:
      - users
      summary: Import Users From Excel
      parameters:
      - name: file
        in: formData
        description: Excel File
        required: true
        type: file
      security:
      - Bearer: []
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  /roles:
    get:
      tags:
      - roles
      summary: Find All Roles
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    post:
      tags:
      - roles
      summary: Add Role
      parameters:
      - name: body
        in: body
        description: Role Data
        required: true
        schema:
          $ref: '#/definitions/roles'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /roles/{id}:
    get:
      tags:
      - roles
      summary: Find Role By Id
      parameters:
      - name: id
        in: path
        description: Role Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    put:
      tags:
      - roles
      summary: Update Role By Id
      parameters:
      - name: id
        in: path
        description: Role Id
        required: true
        type: integer
      - name: body
        in: body
        description: Role Data
        required: true
        schema:
          $ref: '#/definitions/roles'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /roles/{id}/{status}:
    patch:
      tags:
      - roles
      summary: Update Role Status By Id
      parameters:
      - name: id
        in: path
        description: Role Id
        required: true
        type: integer
      - name: status
        in: path
        description: Role Status
        required: true
        type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /options:
    get:
      tags:
      - options
      summary: Find All Options
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    post:
      tags:
      - options
      summary: Add Option
      parameters:
      - name: body
        in: body
        description: Option Data
        required: true
        schema:
          $ref: '#/definitions/options'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /options/{id}:
    get:
      tags:
      - options
      summary: Find Option By Id
      parameters:
      - name: id
        in: path
        description: Option Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    put:
      tags:
      - options
      summary: Update Option By Id
      parameters:
      - name: id
        in: path
        description: Option Id
        required: true
        type: integer
      - name: body
        in: body
        description: Option Data
        required: true
        schema:
          $ref: '#/definitions/options'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /options/{id}/{status}:
    patch:
      tags:
      - options
      summary: Update Option Status By Id
      parameters:
      - name: id
        in: path
        description: Option Id
        required: true
        type: integer
      - name: status
        in: path
        description: Option Status
        required: true
        type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
# definitions
definitions:
  users:
    type: object
    required:
        - userName
        - firstName
        - lastName
        - identification
        - birthDate
        - password
        - rolesId
    properties:
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      identification:
        type: string
      birthDate:
        type: string
        format: date
      password:
        type: string
      rolesId:
        type: array
        items:
          type: integer
          format: int64

  update-users:
    type: object
    required:
        - firstName
        - lastName
        - identification
        - birthDate
        - rolesId
    properties:
      firstName:
        type: string
      lastName:
        type: string
      identification:
        type: string
      birthDate:
        type: string
        format: date
      rolesId:
        type: array
        items:
          type: integer
          format: int64

  roles:
    type: object
    required:
        - name
        - options
    properties:
      name:
        type: string
      options:
        type: array
        items:
          type: integer
          format: int64

  options:
    type: object
    required:
        - name
        - description
    properties:
      name:
        type: string
      description:
        type: string

  user-change-password:
    type: object
    required:
      - userName
      - password
    properties:
      userName:
        type: string
      password:
        type: string

# security definitions
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

# security
security:
  - Bearer: []

schemes:
 - https
 - http
