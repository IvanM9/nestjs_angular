tags:
- name: users
  description: users API

paths:
# [GET] users
  /users:
    get:
      parameters:
      - name: search
        in: query
        description: Búsqueda por nombre o apellido
        required: false
        type: string
      - name: page
        in: query
        description: Número de página
        required: false
        type: integer
      - name: items
        in: query
        description: Cantidad de registros por página
        required: false
        type: integer
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - userName
        - firstName
        - lastName
        - identification
        - birthDate
        - password
        - rolesId
    properties:
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      identification:
        type: string
      birthDate:
        type: string
        format: date
      password:
        type: string
      rolesId:
        type: array
        items:
          type: integer
          format: int64

schemes:
 - https
 - http
